## Description
The restaurant has tables with capacity more than one and customer groups with size more than one. 
Because of that, the restaurant is having some trouble with organization issues. 
You are expected to assign each incoming customer group to a table by considering the following constraints:

* This restaurant has n number of tables, where n is an integer from 3 to 100.000 (3 <= n <= 10^5).
* Tables are named from 0 to n-1. The smallest table number is 0.
* Each table can have a different capacity, let's say c_i, such that 1 <= c_i <= 100000.
* Initially all tables are empty.
* There will be q customer groups in the input, arriving respectively, where (3 <= q <= 10^5).
* Customers might arrive as groups or single. Group sizes can vary between 1 to 100000.
* When a group is arrived, regardless of the group size, it will be assigned to the table with current *maximum remaining capacity*. Your program should output the assigned table number. Note that different groups can be assigned to the same table.
* You do not have to think about the leaving groups. There will be no leave until the last group arrives.
* If the arrived group is too large to assign, unfortunately the restaurant cannot accept them. (i.e if a group arrives with a size larger than the maximum remaining capacity, ignore them.) In such case, you are expected to print *"-1" (without quotes)* as their assigned table number.
* If there are more than one table with the same remaining capacity, the group must be assigned to the one with the *smallest table number*.
* In the end, we need to know the final state of our restaurant. You are expected to print the remaining capacities of all tables in descending order.


## Input
You need to read the input.
The input is formatted as follows:

- First line will be the number of tables, n.
- Second line contains the sizes for each table, separated by a space.
- Third line will be the number of groups to arrive, q.
- Fourth line contains the sizes for each group, separated by a space.

## Output
You are expected to produce an output consisting of *exactly* q+1 lines.

* First q lines must be the assigned table numbers of incoming q groups, respectively. 
* The last line must be the sorted list of remaining capacities of tables, in descending order, separated by a *single space character*. 
* You need to print the output to a file. You need to use provided ostream operator to write to it. (eg. outfile << 'test'; command will write 'test' to the output file.) 

## Sample Input 1
3
10 10 10
7
3 5 7 1 1 1 1
## Sample Output 1
0
1
2
0
0
0
1
4 4 3
## Sample Input 2
3
5 5 5
7
3 5 7 1 1 1 1
## Sample Output 2
0
1
-1
2
2
2
0
2 1 0